/*****************************************************************************
模块名      : ATP(application tool platform)
文件名      : atp.h
相关文件    : atp.c
文件实现功能: 应用工具平台
作者        : gerrard
版本        : V3R0  Copyright(C) 2006-2008 FOCUS, All rights reserved.
-----------------------------------------------------------------------------
修改记录:
日  期      版本        修改人      修改内容
2008/04/05  V3R0        gerrard      Create
******************************************************************************/
#ifndef _ATP_H
#define _ATP_H

#ifdef __cplusplus
extern "C" {
#endif 

#define ATPVER "ATP V3R1 I090428R090428"


#define ATP_OK						(u32)0

#define ATP_ERR_BASE				ATP_ERRBASE
#define ATPERR_PARA					(u32)(ATP_ERR_BASE + 1)
#define ATPERR_MEM					(u32)(ATP_ERR_BASE + 2)
#define ATPERR_IDX					(u32)(ATP_ERR_BASE + 3)
#define ATPERR_SEM					(u32)(ATP_ERR_BASE + 4)
#define ATPERR_OTHERLIB				(u32)(ATP_ERR_BASE + 5)
#define ATPERR_MAGIC				(u32)(ATP_ERR_BASE + 6)

#define ATPERR_MAXERRNO				ATPERR_MAGIC

typedef u32 HDICT;

/*=================================================================
函 数 名: AtpInit
功    能: atp初始化
输入参数: tCommInit - 公共资源(要求telnet句柄，内存库有效)
返回值:	 成功，TRUE; 失败，FALSE 
=================================================================*/
BOOL AtpInit(TCommInitParam tCommInit);

/*=================================================================
函 数 名: AtpExit
功    能: atp退出
输入参数: 
返回值:	 成功，TRUE; 失败，FALSE 
=================================================================*/
BOOL AtpExit();

/*=================================================================
函 数 名: PortSearch
功    能: 在指定范围内搜索空闲端口
输入参数:	wStartPort - 起始端口
			dwTryNum - 尝试个数
			pdwPort - 返回空闲端口
返回值:	 成功，TRUE; 失败，FALSE 
=================================================================*/
BOOL PortSearch(IN u16 wStartPort, IN u32 dwTryNum, IN OUT u16 *pdwPort);


/*=================================================================
函 数 名: DictCreate
功    能: 创建字典
输入参数:	phDict - 返回字典句柄
返回值:	 成功，ATP_OK; 失败，错误码
=================================================================*/
u32 DictCreate(OUT HDICT *phDict);

/*=================================================================
函 数 名: DictDestroy
功    能: 创建字典
输入参数:	hDict - 字典句柄
返回值:	 成功，ATP_OK; 失败，错误码
=================================================================*/
u32 DictDestroy(IN HDICT hDict);


/*=================================================================
函 数 名: DictEntryAdd
功    能: 增加字典条目
输入参数:	hDict - 字典句柄
			dwRef - 索引
			pchContent - 内容
返回值:	 成功，返回内容；失败，返回NULL
=================================================================*/
u32 DictEntryAdd(IN HDICT hDict, IN u32 dwRef, IN s8 *pchContent);


/*=================================================================
函 数 名: DictContentGetByEntry
功    能: 增加字典条目
输入参数:	hDict - 字典句柄
			dwRef - 索引
返回值:	 成功，ATP_OK; 失败，错误码
=================================================================*/
const s8 *DictContentGetByEntry(IN HDICT hDict, IN u32 dwRef);


/*=================================================================
函 数 名: DictEntryNumGet
功    能: 得到字典条目的个数
输入参数:	hDict - 字典句柄
			pdwEntryNum - 返回字典条目的个数
返回值:	 成功，ATP_OK; 失败，错误码
=================================================================*/
u32 DictEntryNumGet(IN HDICT hDict, OUT u32 *pdwEntryNum);




/*===================== 调试接口 =====================*/
/*===========================================================
函数名： atphelp
功能： 
算法实现：
引用全局变量： 未引用
输入参数说明：  

返回值说明： 无
===========================================================*/
void atphelp(void* dwTelHdl);

/*===========================================================
函数名： atpver
功能： 打印版本号
算法实现：
引用全局变量： 未引用
输入参数说明：  

返回值说明： 无
===========================================================*/
void atpver(void* dwTelHdl);


/*===========================================================
函数名： atpdl
功能： atp打印级别
算法实现：
引用全局变量： 未引用
输入参数说明：  

返回值说明： 无
===========================================================*/
void atpdl(void* dwTelHdl, u8 byLvl);

/*===========================================================
函数名： atpprtname
功能： atp打印名称
算法实现：
引用全局变量： 未引用
输入参数说明：  

返回值说明： 无
===========================================================*/
void atpprtname(void* dwTelHdl);



#ifdef __cplusplus
}
#endif  // __cplusplus

#endif //_ATP_H
